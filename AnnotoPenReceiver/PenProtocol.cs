// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace InteractiveSpace {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class PenProtocol {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_InteractiveSpace_StatusMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::InteractiveSpace.StatusMessage, global::InteractiveSpace.StatusMessage.Builder> internal__static_InteractiveSpace_StatusMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_InteractiveSpace_MotionMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::InteractiveSpace.MotionMessage, global::InteractiveSpace.MotionMessage.Builder> internal__static_InteractiveSpace_MotionMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_InteractiveSpace_Message__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::InteractiveSpace.Message, global::InteractiveSpace.Message.Builder> internal__static_InteractiveSpace_Message__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PenProtocol() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChFQZW5Qcm90b2NvbC5wcm90bxIQSW50ZXJhY3RpdmVTcGFjZSJOCg1TdGF0" + 
          "dXNNZXNzYWdlEiwKBnN0YXR1cxgBIAIoDjIcLkludGVyYWN0aXZlU3BhY2Uu" + 
          "U3RhdHVzQ29kZRIPCgdtZXNzYWdlGAIgASgJIpUBCg1Nb3Rpb25NZXNzYWdl" + 
          "EiwKBm1vdGlvbhgBIAIoDjIcLkludGVyYWN0aXZlU3BhY2UuTW90aW9uQ29k" + 
          "ZRIJCgF4GAIgASgCEgkKAXkYAyABKAISEQoJdGltZXN0YW1wGAQgASgNEg0K" + 
          "BWZvcmNlGAUgASgNEhAKCGRvY3VtZW50GAYgASgJEgwKBHBhZ2UYByABKA0i" + 
          "0QEKB01lc3NhZ2USKwoEdHlwZRgBIAIoDjIdLkludGVyYWN0aXZlU3BhY2Uu" + 
          "TWVzc2FnZVR5cGUSDAoEdGltZRgCIAEoDRIUCgxjdXN0b21TdHJpbmcYAyAB" + 
          "KAkSEwoLY3VzdG9tQnl0ZXMYBCABKAwSLwoGc3RhdHVzGAUgASgLMh8uSW50" + 
          "ZXJhY3RpdmVTcGFjZS5TdGF0dXNNZXNzYWdlEi8KBm1vdGlvbhgGIAEoCzIf" + 
          "LkludGVyYWN0aXZlU3BhY2UuTW90aW9uTWVzc2FnZSpICgtNZXNzYWdlVHlw" + 
          "ZRIQCgxDdXN0b21TdHJpbmcQABIPCgtDdXN0b21CeXRlcxABEgoKBlN0YXR1" + 
          "cxACEgoKBk1vdGlvbhADKj8KClN0YXR1c0NvZGUSDQoJQ29ubmVjdGVkEAAS" + 
          "DAoIU3RhcnRpbmcQARIJCgVSZWFkeRACEgkKBUVycm9yEAMqMQoKTW90aW9u" + 
          "Q29kZRILCgdQZW5Eb3duEAASCQoFUGVuVXAQARILCgdQZW5Nb3ZlEAJCRQow" + 
          "ZWR1LnVjc2QuaGNpLmludGVyYWN0aXZlc3BhY2UuYW5ub3RvcGVuLnByb3Rv" + 
          "YnVmQhFBbm5vdG9QZW5Qcm90b2NvbA==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_InteractiveSpace_StatusMessage__Descriptor = Descriptor.MessageTypes[0];
        internal__static_InteractiveSpace_StatusMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::InteractiveSpace.StatusMessage, global::InteractiveSpace.StatusMessage.Builder>(internal__static_InteractiveSpace_StatusMessage__Descriptor,
                new string[] { "Status", "Message", });
        internal__static_InteractiveSpace_MotionMessage__Descriptor = Descriptor.MessageTypes[1];
        internal__static_InteractiveSpace_MotionMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::InteractiveSpace.MotionMessage, global::InteractiveSpace.MotionMessage.Builder>(internal__static_InteractiveSpace_MotionMessage__Descriptor,
                new string[] { "Motion", "X", "Y", "Timestamp", "Force", "Document", "Page", });
        internal__static_InteractiveSpace_Message__Descriptor = Descriptor.MessageTypes[2];
        internal__static_InteractiveSpace_Message__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::InteractiveSpace.Message, global::InteractiveSpace.Message.Builder>(internal__static_InteractiveSpace_Message__Descriptor,
                new string[] { "Type", "Time", "CustomString", "CustomBytes", "Status", "Motion", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public enum MessageType {
    CustomString = 0,
    CustomBytes = 1,
    Status = 2,
    Motion = 3,
  }
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public enum StatusCode {
    Connected = 0,
    Starting = 1,
    Ready = 2,
    Error = 3,
  }
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public enum MotionCode {
    PenDown = 0,
    PenUp = 1,
    PenMove = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StatusMessage : pb::GeneratedMessage<StatusMessage, StatusMessage.Builder> {
    private StatusMessage() { }
    private static readonly StatusMessage defaultInstance = new StatusMessage().MakeReadOnly();
    private static readonly string[] _statusMessageFieldNames = new string[] { "message", "status" };
    private static readonly uint[] _statusMessageFieldTags = new uint[] { 18, 8 };
    public static StatusMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StatusMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StatusMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::InteractiveSpace.PenProtocol.internal__static_InteractiveSpace_StatusMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StatusMessage, StatusMessage.Builder> InternalFieldAccessors {
      get { return global::InteractiveSpace.PenProtocol.internal__static_InteractiveSpace_StatusMessage__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private global::InteractiveSpace.StatusCode status_ = global::InteractiveSpace.StatusCode.Connected;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::InteractiveSpace.StatusCode Status {
      get { return status_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStatus) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _statusMessageFieldNames;
      if (hasStatus) {
        output.WriteEnum(1, field_names[1], (int) Status, Status);
      }
      if (hasMessage) {
        output.WriteString(2, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Status);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StatusMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StatusMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StatusMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StatusMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StatusMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StatusMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StatusMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StatusMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StatusMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StatusMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StatusMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StatusMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StatusMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StatusMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StatusMessage result;
      
      private StatusMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          StatusMessage original = result;
          result = new StatusMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StatusMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::InteractiveSpace.StatusMessage.Descriptor; }
      }
      
      public override StatusMessage DefaultInstanceForType {
        get { return global::InteractiveSpace.StatusMessage.DefaultInstance; }
      }
      
      public override StatusMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StatusMessage) {
          return MergeFrom((StatusMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StatusMessage other) {
        if (other == global::InteractiveSpace.StatusMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_statusMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _statusMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::InteractiveSpace.StatusCode Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::InteractiveSpace.StatusCode value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::InteractiveSpace.StatusCode.Connected;
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static StatusMessage() {
      object.ReferenceEquals(global::InteractiveSpace.PenProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MotionMessage : pb::GeneratedMessage<MotionMessage, MotionMessage.Builder> {
    private MotionMessage() { }
    private static readonly MotionMessage defaultInstance = new MotionMessage().MakeReadOnly();
    private static readonly string[] _motionMessageFieldNames = new string[] { "document", "force", "motion", "page", "timestamp", "x", "y" };
    private static readonly uint[] _motionMessageFieldTags = new uint[] { 50, 40, 8, 56, 32, 21, 29 };
    public static MotionMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MotionMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MotionMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::InteractiveSpace.PenProtocol.internal__static_InteractiveSpace_MotionMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MotionMessage, MotionMessage.Builder> InternalFieldAccessors {
      get { return global::InteractiveSpace.PenProtocol.internal__static_InteractiveSpace_MotionMessage__FieldAccessorTable; }
    }
    
    public const int MotionFieldNumber = 1;
    private bool hasMotion;
    private global::InteractiveSpace.MotionCode motion_ = global::InteractiveSpace.MotionCode.PenDown;
    public bool HasMotion {
      get { return hasMotion; }
    }
    public global::InteractiveSpace.MotionCode Motion {
      get { return motion_; }
    }
    
    public const int XFieldNumber = 2;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 3;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int TimestampFieldNumber = 4;
    private bool hasTimestamp;
    private uint timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public uint Timestamp {
      get { return timestamp_; }
    }
    
    public const int ForceFieldNumber = 5;
    private bool hasForce;
    private uint force_;
    public bool HasForce {
      get { return hasForce; }
    }
    [global::System.CLSCompliant(false)]
    public uint Force {
      get { return force_; }
    }
    
    public const int DocumentFieldNumber = 6;
    private bool hasDocument;
    private string document_ = "";
    public bool HasDocument {
      get { return hasDocument; }
    }
    public string Document {
      get { return document_; }
    }
    
    public const int PageFieldNumber = 7;
    private bool hasPage;
    private uint page_;
    public bool HasPage {
      get { return hasPage; }
    }
    [global::System.CLSCompliant(false)]
    public uint Page {
      get { return page_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMotion) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _motionMessageFieldNames;
      if (hasMotion) {
        output.WriteEnum(1, field_names[2], (int) Motion, Motion);
      }
      if (hasX) {
        output.WriteFloat(2, field_names[5], X);
      }
      if (hasY) {
        output.WriteFloat(3, field_names[6], Y);
      }
      if (hasTimestamp) {
        output.WriteUInt32(4, field_names[4], Timestamp);
      }
      if (hasForce) {
        output.WriteUInt32(5, field_names[1], Force);
      }
      if (hasDocument) {
        output.WriteString(6, field_names[0], Document);
      }
      if (hasPage) {
        output.WriteUInt32(7, field_names[3], Page);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMotion) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Motion);
        }
        if (hasX) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, Y);
        }
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, Timestamp);
        }
        if (hasForce) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, Force);
        }
        if (hasDocument) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Document);
        }
        if (hasPage) {
          size += pb::CodedOutputStream.ComputeUInt32Size(7, Page);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MotionMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MotionMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MotionMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MotionMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MotionMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MotionMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MotionMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MotionMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MotionMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MotionMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MotionMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MotionMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MotionMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MotionMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MotionMessage result;
      
      private MotionMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          MotionMessage original = result;
          result = new MotionMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MotionMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::InteractiveSpace.MotionMessage.Descriptor; }
      }
      
      public override MotionMessage DefaultInstanceForType {
        get { return global::InteractiveSpace.MotionMessage.DefaultInstance; }
      }
      
      public override MotionMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MotionMessage) {
          return MergeFrom((MotionMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MotionMessage other) {
        if (other == global::InteractiveSpace.MotionMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMotion) {
          Motion = other.Motion;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasForce) {
          Force = other.Force;
        }
        if (other.HasDocument) {
          Document = other.Document;
        }
        if (other.HasPage) {
          Page = other.Page;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_motionMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _motionMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.motion_, out unknown)) {
                result.hasMotion = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 21: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 29: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 32: {
              result.hasTimestamp = input.ReadUInt32(ref result.timestamp_);
              break;
            }
            case 40: {
              result.hasForce = input.ReadUInt32(ref result.force_);
              break;
            }
            case 50: {
              result.hasDocument = input.ReadString(ref result.document_);
              break;
            }
            case 56: {
              result.hasPage = input.ReadUInt32(ref result.page_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMotion {
       get { return result.hasMotion; }
      }
      public global::InteractiveSpace.MotionCode Motion {
        get { return result.Motion; }
        set { SetMotion(value); }
      }
      public Builder SetMotion(global::InteractiveSpace.MotionCode value) {
        PrepareBuilder();
        result.hasMotion = true;
        result.motion_ = value;
        return this;
      }
      public Builder ClearMotion() {
        PrepareBuilder();
        result.hasMotion = false;
        result.motion_ = global::InteractiveSpace.MotionCode.PenDown;
        return this;
      }
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public uint Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(uint value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0;
        return this;
      }
      
      public bool HasForce {
        get { return result.hasForce; }
      }
      [global::System.CLSCompliant(false)]
      public uint Force {
        get { return result.Force; }
        set { SetForce(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetForce(uint value) {
        PrepareBuilder();
        result.hasForce = true;
        result.force_ = value;
        return this;
      }
      public Builder ClearForce() {
        PrepareBuilder();
        result.hasForce = false;
        result.force_ = 0;
        return this;
      }
      
      public bool HasDocument {
        get { return result.hasDocument; }
      }
      public string Document {
        get { return result.Document; }
        set { SetDocument(value); }
      }
      public Builder SetDocument(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDocument = true;
        result.document_ = value;
        return this;
      }
      public Builder ClearDocument() {
        PrepareBuilder();
        result.hasDocument = false;
        result.document_ = "";
        return this;
      }
      
      public bool HasPage {
        get { return result.hasPage; }
      }
      [global::System.CLSCompliant(false)]
      public uint Page {
        get { return result.Page; }
        set { SetPage(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPage(uint value) {
        PrepareBuilder();
        result.hasPage = true;
        result.page_ = value;
        return this;
      }
      public Builder ClearPage() {
        PrepareBuilder();
        result.hasPage = false;
        result.page_ = 0;
        return this;
      }
    }
    static MotionMessage() {
      object.ReferenceEquals(global::InteractiveSpace.PenProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Message : pb::GeneratedMessage<Message, Message.Builder> {
    private Message() { }
    private static readonly Message defaultInstance = new Message().MakeReadOnly();
    private static readonly string[] _messageFieldNames = new string[] { "customBytes", "customString", "motion", "status", "time", "type" };
    private static readonly uint[] _messageFieldTags = new uint[] { 34, 26, 50, 42, 16, 8 };
    public static Message DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Message DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Message ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::InteractiveSpace.PenProtocol.internal__static_InteractiveSpace_Message__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Message, Message.Builder> InternalFieldAccessors {
      get { return global::InteractiveSpace.PenProtocol.internal__static_InteractiveSpace_Message__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::InteractiveSpace.MessageType type_ = global::InteractiveSpace.MessageType.CustomString;
    public bool HasType {
      get { return hasType; }
    }
    public global::InteractiveSpace.MessageType Type {
      get { return type_; }
    }
    
    public const int TimeFieldNumber = 2;
    private bool hasTime;
    private uint time_;
    public bool HasTime {
      get { return hasTime; }
    }
    [global::System.CLSCompliant(false)]
    public uint Time {
      get { return time_; }
    }
    
    public const int CustomStringFieldNumber = 3;
    private bool hasCustomString;
    private string customString_ = "";
    public bool HasCustomString {
      get { return hasCustomString; }
    }
    public string CustomString {
      get { return customString_; }
    }
    
    public const int CustomBytesFieldNumber = 4;
    private bool hasCustomBytes;
    private pb::ByteString customBytes_ = pb::ByteString.Empty;
    public bool HasCustomBytes {
      get { return hasCustomBytes; }
    }
    public pb::ByteString CustomBytes {
      get { return customBytes_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private global::InteractiveSpace.StatusMessage status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::InteractiveSpace.StatusMessage Status {
      get { return status_ ?? global::InteractiveSpace.StatusMessage.DefaultInstance; }
    }
    
    public const int MotionFieldNumber = 6;
    private bool hasMotion;
    private global::InteractiveSpace.MotionMessage motion_;
    public bool HasMotion {
      get { return hasMotion; }
    }
    public global::InteractiveSpace.MotionMessage Motion {
      get { return motion_ ?? global::InteractiveSpace.MotionMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (HasStatus) {
          if (!Status.IsInitialized) return false;
        }
        if (HasMotion) {
          if (!Motion.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _messageFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[5], (int) Type, Type);
      }
      if (hasTime) {
        output.WriteUInt32(2, field_names[4], Time);
      }
      if (hasCustomString) {
        output.WriteString(3, field_names[1], CustomString);
      }
      if (hasCustomBytes) {
        output.WriteBytes(4, field_names[0], CustomBytes);
      }
      if (hasStatus) {
        output.WriteMessage(5, field_names[3], Status);
      }
      if (hasMotion) {
        output.WriteMessage(6, field_names[2], Motion);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        if (hasTime) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Time);
        }
        if (hasCustomString) {
          size += pb::CodedOutputStream.ComputeStringSize(3, CustomString);
        }
        if (hasCustomBytes) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, CustomBytes);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Status);
        }
        if (hasMotion) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Motion);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Message ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Message ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Message ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Message ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Message ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Message ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Message ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Message ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Message ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Message ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Message MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Message prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Message, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Message cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Message result;
      
      private Message PrepareBuilder() {
        if (resultIsReadOnly) {
          Message original = result;
          result = new Message();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Message MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::InteractiveSpace.Message.Descriptor; }
      }
      
      public override Message DefaultInstanceForType {
        get { return global::InteractiveSpace.Message.DefaultInstance; }
      }
      
      public override Message BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Message) {
          return MergeFrom((Message) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Message other) {
        if (other == global::InteractiveSpace.Message.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        if (other.HasCustomString) {
          CustomString = other.CustomString;
        }
        if (other.HasCustomBytes) {
          CustomBytes = other.CustomBytes;
        }
        if (other.HasStatus) {
          MergeStatus(other.Status);
        }
        if (other.HasMotion) {
          MergeMotion(other.Motion);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasTime = input.ReadUInt32(ref result.time_);
              break;
            }
            case 26: {
              result.hasCustomString = input.ReadString(ref result.customString_);
              break;
            }
            case 34: {
              result.hasCustomBytes = input.ReadBytes(ref result.customBytes_);
              break;
            }
            case 42: {
              global::InteractiveSpace.StatusMessage.Builder subBuilder = global::InteractiveSpace.StatusMessage.CreateBuilder();
              if (result.hasStatus) {
                subBuilder.MergeFrom(Status);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Status = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::InteractiveSpace.MotionMessage.Builder subBuilder = global::InteractiveSpace.MotionMessage.CreateBuilder();
              if (result.hasMotion) {
                subBuilder.MergeFrom(Motion);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Motion = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::InteractiveSpace.MessageType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::InteractiveSpace.MessageType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::InteractiveSpace.MessageType.CustomString;
        return this;
      }
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      [global::System.CLSCompliant(false)]
      public uint Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTime(uint value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0;
        return this;
      }
      
      public bool HasCustomString {
        get { return result.hasCustomString; }
      }
      public string CustomString {
        get { return result.CustomString; }
        set { SetCustomString(value); }
      }
      public Builder SetCustomString(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomString = true;
        result.customString_ = value;
        return this;
      }
      public Builder ClearCustomString() {
        PrepareBuilder();
        result.hasCustomString = false;
        result.customString_ = "";
        return this;
      }
      
      public bool HasCustomBytes {
        get { return result.hasCustomBytes; }
      }
      public pb::ByteString CustomBytes {
        get { return result.CustomBytes; }
        set { SetCustomBytes(value); }
      }
      public Builder SetCustomBytes(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomBytes = true;
        result.customBytes_ = value;
        return this;
      }
      public Builder ClearCustomBytes() {
        PrepareBuilder();
        result.hasCustomBytes = false;
        result.customBytes_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::InteractiveSpace.StatusMessage Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::InteractiveSpace.StatusMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder SetStatus(global::InteractiveSpace.StatusMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStatus(global::InteractiveSpace.StatusMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStatus &&
            result.status_ != global::InteractiveSpace.StatusMessage.DefaultInstance) {
            result.status_ = global::InteractiveSpace.StatusMessage.CreateBuilder(result.status_).MergeFrom(value).BuildPartial();
        } else {
          result.status_ = value;
        }
        result.hasStatus = true;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = null;
        return this;
      }
      
      public bool HasMotion {
       get { return result.hasMotion; }
      }
      public global::InteractiveSpace.MotionMessage Motion {
        get { return result.Motion; }
        set { SetMotion(value); }
      }
      public Builder SetMotion(global::InteractiveSpace.MotionMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMotion = true;
        result.motion_ = value;
        return this;
      }
      public Builder SetMotion(global::InteractiveSpace.MotionMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMotion = true;
        result.motion_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMotion(global::InteractiveSpace.MotionMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMotion &&
            result.motion_ != global::InteractiveSpace.MotionMessage.DefaultInstance) {
            result.motion_ = global::InteractiveSpace.MotionMessage.CreateBuilder(result.motion_).MergeFrom(value).BuildPartial();
        } else {
          result.motion_ = value;
        }
        result.hasMotion = true;
        return this;
      }
      public Builder ClearMotion() {
        PrepareBuilder();
        result.hasMotion = false;
        result.motion_ = null;
        return this;
      }
    }
    static Message() {
      object.ReferenceEquals(global::InteractiveSpace.PenProtocol.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
